<UserControl x:Class="MachineTagEditor.Modules.TagManager.AddDataType.View"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:inf="clr-namespace:MachineTagEditor.Infrastructure;assembly=MachineTagEditor.Infrastructure"
             xmlns:select="clr-namespace:MachineTagEditor.Infrastructure.TemplateSelectors;assembly=MachineTagEditor.Infrastructure"
             xmlns:ia="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:cmd="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Platform"
             xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
             xmlns:conv="clr-namespace:MachineTagEditor.Infrastructure.Converters;assembly=MachineTagEditor.Infrastructure"
             mc:Ignorable="d" 
            >
    <UserControl.Resources>
        <CollectionViewSource x:Key="parentCollection" Source="{Binding Path=ParentsList}">
            <CollectionViewSource.SortDescriptions>
                <scm:SortDescription Direction="Ascending"/>
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>
        
        <conv:BoolToVisibilityConverter x:Key="VisibleOnNoParent"/> 
        
        <Style TargetType="Label" BasedOn="{StaticResource baseStyle}">
            <Style.Setters>
                <Setter Property="HorizontalAlignment" Value="Right"/>
                <Setter Property="Margin" Value="0"/>
            </Style.Setters>
        </Style>

        <Style x:Key="fromParentStyle" TargetType="Label" BasedOn="{StaticResource baseStyle}">
            <Style.Setters>
                <Setter Property="Foreground" Value="Blue"/>
                <Setter Property="FontStyle" Value="Italic"/>
                
            </Style.Setters>
        </Style>
        <Style x:Key="NullStyle" TargetType="Label" BasedOn="{StaticResource baseStyle}">
            <Style.Setters>
                <Setter Property="Foreground" Value="LightGray"/>
            </Style.Setters>
        </Style>

        <Style TargetType="TextBox" BasedOn="{StaticResource baseStyle}">
            <Style.Setters>
            </Style.Setters>
        </Style>

        <Style TargetType="ComboBox" BasedOn="{StaticResource baseStyle}">
            <Style.Setters>
            </Style.Setters>
        </Style>

        <Style TargetType="Button" BasedOn="{StaticResource baseStyle}">
            <Style.Setters>
            </Style.Setters>
        </Style>





    </UserControl.Resources>
    <Grid Margin="5,5,5,50">
        <Border Margin="0,5,0,-5" Name="mask" Background="White" CornerRadius="8,8,8,8"/>


        <Grid Margin="5" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" MinHeight="50"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.OpacityMask>
                <VisualBrush Visual="{Binding ElementName=mask}"/>
            </Grid.OpacityMask>

            <Border Height="Auto" Background="#014B68" BorderBrush="{x:Static SystemColors.ActiveBorderBrush}" BorderThickness="2">
                <Label MinHeight="50" Content="Add Data Type" 
                       FontSize="24"
                       Foreground="White" 
                       HorizontalAlignment="Left"
                       VerticalAlignment="Center"/>
            </Border>

            <Grid Grid.Row="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition  Height="Auto"/>
                    <RowDefinition  Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition  Height="Auto"/>
                    <RowDefinition  Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition  Height="Auto"/>
                    <RowDefinition  Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Label Grid.Row="0" Grid.Column="0" 
                       Content="Name:"/>
                
                <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding Name}"/>
                

                <Label Grid.Row="0" Grid.Column="2" 
                       Content="Parent:"/>
                <ComboBox Grid.Row="0" Grid.Column="3" MinWidth="100" ItemsSource="{Binding Source={StaticResource parentCollection}}"
                          IsReadOnly="True" SelectedItem="{Binding SelectedParentText, Mode=TwoWay}" Height="22" Margin="5,5,5,0" VerticalAlignment="Top" />




                <Label Grid.Row="1" Grid.Column="2" HorizontalAlignment="Right"
                       Content="System Type:"/>

                <ComboBox Grid.Row="1" Grid.Column="3" ItemsSource="{Binding BaseTypesList}" SelectedItem="{Binding SelectedSystemType}" IsEnabled="{Binding EnableOnNoParent}"/>
                <StackPanel Grid.Row="4" Grid.ColumnSpan="4" Orientation="Horizontal" HorizontalAlignment="Left" Visibility="{Binding EnableOnNoParent,Converter={StaticResource VisibleOnNoParent}}">
                    <Label Content="Is this a US/Metric conversion data type?:"/>
                    <ToggleButton  Padding="20,0,20,0" HorizontalAlignment="Right" IsChecked="{Binding IsChecked}" IsEnabled="{Binding EnableOnNoParent}">
                        <ToggleButton.Style>
                            <Style TargetType="ToggleButton">
                                <Setter Property="Content"  Value="Yes"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsChecked}" Value="True">
                                        <Setter Property="Content"  Value="No"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ToggleButton.Style>
   
                    </ToggleButton>


                </StackPanel>

                <Label Grid.Row="5" Grid.Column="0"  HorizontalAlignment="Right">
                    <Label.Style>
                        <Style TargetType="Label">
                            <Setter Property="Content"  Value="Label:"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsChecked}" Value="True">
                                    <Setter Property="Content"  Value="Metric Label:"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Label.Style>
                </Label>

                <TextBox   Grid.Row="5" Grid.Column="1"                           
                           Text="{Binding UnitOneText, UpdateSourceTrigger=PropertyChanged}"
                           />
                    <Label Grid.Row="6" Grid.Column="0" 
                           Content="U.S. Label:"
                           Visibility="{Binding USMetricVisibility}"/>
                    <TextBox 
                           Grid.Row="6" Grid.Column="1"
                           Visibility="{Binding USMetricVisibility, UpdateSourceTrigger=PropertyChanged}"
                           Text="{Binding UnitTwoText, UpdateSourceTrigger=PropertyChanged}"/>

                <Label Grid.Row="5" Grid.Column="2" HorizontalAlignment="Right"
                       Content="Metric To U.S.:"
                       Visibility="{Binding USMetricVisibility, UpdateSourceTrigger=PropertyChanged}"/>


                <TextBox Grid.Row="5" Grid.Column="3" 
                                        Text="{Binding UnitOneConversion, UpdateSourceTrigger=PropertyChanged}" 
                                        Visibility="{Binding USMetricVisibility, UpdateSourceTrigger=PropertyChanged}"/>
                
                <Label Grid.Row="6" Grid.Column="2" Content="U.S. to Metric:" Visibility="{Binding USMetricVisibility, UpdateSourceTrigger=PropertyChanged}"/>
                    <TextBox Grid.Row="6" Grid.Column="3" 
                                        Text="{Binding UnitTwoConversion, UpdateSourceTrigger=PropertyChanged}"                                        
                                        Visibility="{Binding USMetricVisibility, UpdateSourceTrigger=PropertyChanged}"/>

                <StackPanel Grid.Row="9" Grid.Column="2" Orientation="Horizontal">
                    <Label>
                        <Label.Style>
                            <Style TargetType="Label">
                                <Setter Property="Content"  Value="Rounding:"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsChecked}" Value="True">
                                        <Setter Property="Content"  Value="U.S Rounding:"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Label.Style>
                    </Label>
                    <TextBox MinWidth="20" Text="{Binding UnitOneRounding}"/>
                </StackPanel>
                <StackPanel Grid.Row="9" Grid.Column="3" Orientation="Horizontal"  Visibility="{Binding USMetricVisibility, UpdateSourceTrigger=PropertyChanged}">
                    <Label  Content="Metric Rounding:" />
                    <TextBox MinWidth="20" Text="{Binding UnitTwoRounding}"/>
                </StackPanel>


            </Grid>
            <StackPanel Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2" >
                <!--TODO Snoop the binding for the Header-->
                <ComboBox ItemsSource="{Binding XmlFileList}" DataContext="{Binding XmlFileList}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Header}"/>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
                <Button Content="Add"
                        Margin="15,0,15,30"
                        Command="{Binding AddToFile}"
                        />
            </StackPanel>
        </Grid>
    </Grid>
</UserControl>
