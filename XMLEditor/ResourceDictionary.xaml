<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:XMLEditor"
                    xmlns:inf="clr-namespace:MachineTagEditor.Infrastructure;assembly=MachineTagEditor.Infrastructure">
	
	<ImageBrush x:Key="metalBG" ImageSource="Resources/metal-background11.jpg" />
    <ImageBrush x:Key="blueTechBG" ImageSource="Resources/blueTech.jpg" />

    <Style x:Key="baseStyle" TargetType="Control">
        <Setter Property="Margin" Value="3"/>
    </Style>

    <DataTemplate x:Key="defaultTemplate">
        <TextBlock Text="Select a node to view information"/>
    </DataTemplate>
    <DataTemplate x:Key="enumTemplate">
        <FlowDocumentPageViewer>
            <FlowDocument>
                <BlockUIContainer>
                    <TextBlock Text="Enums"/>
                </BlockUIContainer>
                <Paragraph>

                    "Enum" is short for "Enumeration". It is a user-defined type that consists of a set of named integral constants that are known as enumerators.
                    <LineBreak/>
                    In the MCM .xml files, an enumeration can be defined by creating either a "bits" or an "enum" node, which is given a unique name. Each one of these nodes will consist of "children nodes" that describe a text name and a unique integer value.
                    <LineBreak/>
                    The Node you have selected is named:
                </Paragraph>
                <BlockUIContainer>
                    <TextBlock Text="{Binding Path=DataContext.SelectedNode.Attributes.Item(0).Value,
                            RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:Shell}},
                            UpdateSourceTrigger=PropertyChanged}" />
                </BlockUIContainer>
                <Paragraph>
                    Expand the node to see it's values
                </Paragraph>
            </FlowDocument>
        </FlowDocumentPageViewer>
    </DataTemplate>
    <DataTemplate x:Key="arrayTemplate">
        <TextBlock Text="Array"/>
    </DataTemplate>
    <DataTemplate x:Key="copyTemplate">
        <TextBlock Text="Copy"/>
    </DataTemplate>
    <DataTemplate x:Key="modTemplate">
        <TextBlock Text="Mod"/>
    </DataTemplate>
    <DataTemplate x:Key="tableTemplate">
        <TextBlock Text="Table"/>
    </DataTemplate>
    <DataTemplate x:Key="tagTemplate">
        <FlowDocumentPageViewer>
            <FlowDocument>
                <Paragraph>
                    <Bold>readFrom=”PLC”</Bold> is an XML attribute that indicates where the data is being read from. “PLC” and “HMI” are the possible values.
                    <LineBreak/>
                    <LineBreak/>
                    <Bold>readName=”PcAlarms[0]”
                    </Bold>
                    Indictes which integer from the PcAlarms array has the value to indicate which bits are set on or off and, therefore, which alarms/warnings are being sent.
                    <LineBreak/>
                    <LineBreak/>
                    <Bold>name=”Alarms.System”
                    </Bold>
                    This matches to the
                        bits name=" Alarms.System" / from above. It indicates which list of alarms/warnings this tag will be displaying.
                    <LineBreak/>
                    <LineBreak/>
                    <Bold>text=" Alarms System A”
                    </Bold>
                    Defines the text that will appear in the Alarms tab of the Simulator window below.
                    <LineBreak/>
                    <LineBreak/>
                    <Bold>" textEs=” Sistema de Alarmas A”
                    </Bold>
                    Defines what text will appear if the language has been set to Spanish. There are others such as textCh for Mandarin and textDe for German.
                    <LineBreak/>
                    <LineBreak/>
                    <Bold>group="Alarms"
                    </Bold>
                    Defines the group name to which this belongs. In this case, while it is set to “Alarms”, this needs to be set to “Alarms” or “Warnings” in order for the messages to appear in the Alarm/Warning list.
                    <LineBreak/>
                    <LineBreak/>
                    <Bold>page="Alarms"
                    </Bold>
                    Defines which tab this entry will appear on in the Simulator window. In the example below, changing the value of the Warnings entry page to page=”Not Alarmed” creates a new tab with just this one entry.

                </Paragraph>
            </FlowDocument>
        </FlowDocumentPageViewer>
    </DataTemplate>

            
    <DataTemplate x:Key="addAlarmHelpTemplate">
        <RichTextBox>
                <FlowDocument>
                    <Paragraph>
                        <Bold>Adding An Alarm</Bold>
                    </Paragraph>
                    <Paragraph>
                        <Bold>Name:</Bold> Give the alarm a unique name. This is the name used if this alarm is going to be a parent tag. It is a good idea to name this alarm
                    similiarily to the message tags name. For example, if the messages name is "AlarmStation", a good name for this alarm would be "Alarm.Station1".
                        <LineBreak/>
                        <Bold>Text:</Bold> This defines the name that will be displayed in the simulator section of the HMI for this alarm.
                        <LineBreak/>
                        <Bold>Prefix:</Bold> This prefix will be added to each of the message strings for the alarm.
                        <LineBreak/>
                        <Bold>ReadFrom:</Bold> This setting defines where the bit values will be read from, either the PLC or the HMI.
                        <LineBreak/>
                        <Bold>ReadName:</Bold> The name of the tag that holds the bit values for the alarm.
                        <LineBreak/>
                        <Bold>Page:</Bold> Defines what tab of the simulator window this alarm will appear on. Typically this is set to "Alarms", but can be defined as any value.
                        <LineBreak/>
                        <Bold>Message Settings:</Bold> List of messages defined by bit that will be displayed when that bit goes active. You can choose a set of already defined messages or create a new set.
                        <LineBreak/>
                        <Bold>Name (Message Settings):</Bold> Name of a new set of messages.
                    </Paragraph>
                </FlowDocument>
        </RichTextBox>
    </DataTemplate>
    <inf:HelpViewSelector x:Key="helpViewSelector" 
                                DefaultTemplate="{StaticResource defaultTemplate}"
                                EnumTemplate="{StaticResource enumTemplate}"
                                ArrayTemplate="{StaticResource arrayTemplate}"
                                CopyTemplate="{StaticResource copyTemplate}"
                                ModTemplate="{StaticResource modTemplate}"
                                TableTemplate="{StaticResource tableTemplate}"
                                TagTemplate="{StaticResource tagTemplate}"
                                AlarmTemplate="{StaticResource addAlarmHelpTemplate}"
                                />

    <inf:AttributesToVisibilityConverter x:Key="AttributesToVisibilityConverter"/>
    <inf:XmlAttributesToLableConverter x:Key="XmlAttributesToLableConverter"/>


    <inf:XMLNodeViewSelector x:Key="nodeViewSelector" NodeBlueTemplate="{StaticResource NodeBlueTemplate}"
                             NodeMetalTemplate="{StaticResource NodeMetalTemplate}"
                             NodeTextTemplate="{StaticResource NodeTextTemplate}"/>

    <HierarchicalDataTemplate x:Key="NodeMetalTemplate" >

        <Border Background="LightBlue" BorderBrush="LightGray" 
      BorderThickness="3" ClipToBounds="True" CornerRadius="8,8,8,8">
            <StackPanel Orientation="Horizontal"                     
                        >
                <HeaderedContentControl >
                    <HeaderedContentControl.Header>
                        <StackPanel >
                            <TextBlock Text="Type:" FontSize="10"/>
                            <TextBlock x:Name="text" Text="{Binding Path=Value,UpdateSourceTrigger=PropertyChanged}" FontSize="36" FontFamily="Italic"/>

                        </StackPanel>
                    </HeaderedContentControl.Header>
                    <HeaderedContentControl.Triggers>

                    </HeaderedContentControl.Triggers>
                    <HeaderedContentControl.Content>
                        <StackPanel>
                            <TextBlock Text="Attributes:" FontSize="10" />
                            <Border BorderBrush="Black" BorderThickness="2" CornerRadius="8,8,8,8">
                                <ItemsControl Grid.IsSharedSizeScope="true"  ItemsSource="{Binding Attributes}" Visibility="{Binding Attributes,Converter={StaticResource AttributesToVisibilityConverter}}">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Grid.Column="0" Text="{Binding Name}" MinWidth="60"/>
                                                <TextBox Grid.Column="1" Text="{Binding Value}" />
                                            </Grid>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl >
                            </Border>
                        </StackPanel>
                    </HeaderedContentControl.Content>
                </HeaderedContentControl>
            </StackPanel>
        </Border>

        <HierarchicalDataTemplate.ItemsSource>
            <Binding XPath="child::node()" />
        </HierarchicalDataTemplate.ItemsSource>


        <HierarchicalDataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=NodeType}" Value="Text">
                <Setter TargetName="text" Property="Text" Value="{Binding Path=Value, UpdateSourceTrigger=PropertyChanged}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=NodeType}" Value="Element">
                <Setter TargetName="text" Property="Text" Value="{Binding Path=Name, UpdateSourceTrigger=PropertyChanged}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=NodeType}" Value="Comment">

                <Setter TargetName="text" Property="Text" Value="Comments"></Setter>
            </DataTrigger>
        </HierarchicalDataTemplate.Triggers>

    </HierarchicalDataTemplate>


    <HierarchicalDataTemplate x:Key="NodeBlueTemplate">
        <HierarchicalDataTemplate.ItemsSource>
            <Binding XPath="child::node()" />
        </HierarchicalDataTemplate.ItemsSource>



        <Border Background="LightBlue" BorderBrush="DarkBlue" 
      BorderThickness="3" ClipToBounds="True" CornerRadius="8,8,8,8">





            <StackPanel>
                <Grid Width="Auto">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>

                    </Grid.RowDefinitions>
                    <StackPanel Grid.Row="0" Orientation="Horizontal">
                        <Label  Content="Node Name:"/>
                        <TextBlock x:Name="text" Text="{Binding Path=Value,UpdateSourceTrigger=PropertyChanged}"/>
                    </StackPanel>



                    <StackPanel Grid.Row ="2">


                        <Label Content="Attributes:"  Width="Auto"  />
                        <ListView ItemsSource="{Binding Attributes}" Width="Auto">
                            <ListView.View>
                                <GridView >
                                    <GridView.Columns>
                                        <GridViewColumn Header="Name" DisplayMemberBinding="{Binding Name}"/>
                                        <GridViewColumn Header="Value" DisplayMemberBinding="{Binding Value}"/>
                                    </GridView.Columns>
                                </GridView>
                            </ListView.View>
                        </ListView>
                    </StackPanel>
                </Grid>
            </StackPanel>
        </Border>

        <HierarchicalDataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=NodeType}" Value="Text">
                <Setter TargetName="text" Property="Text" Value="{Binding Path=Value, UpdateSourceTrigger=PropertyChanged}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=NodeType}" Value="Element">
                <Setter TargetName="text" Property="Text" Value="{Binding Path=Name, UpdateSourceTrigger=PropertyChanged}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=NodeType}" Value="Comment">

                <Setter TargetName="text" Property="Text" Value="Comments"></Setter>
            </DataTrigger>
        </HierarchicalDataTemplate.Triggers>
    </HierarchicalDataTemplate>

    <HierarchicalDataTemplate x:Key="NodeTextTemplate">
        <StackPanel Orientation="Horizontal">
            <TextBlock x:Name="text" Text="{Binding Path=Value}">
            </TextBlock>
            <TextBlock Margin="5,0,0,0"  Foreground="Red" Text="{Binding Attributes, Converter={StaticResource XmlAttributesToLableConverter}}">
            </TextBlock>
        </StackPanel>
        <HierarchicalDataTemplate.ItemsSource>
            <Binding XPath="child::node()" />
        </HierarchicalDataTemplate.ItemsSource>

        <HierarchicalDataTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=NodeType}" Value="Text">
                <Setter TargetName="text" Property="Text" Value="{Binding Path=Value}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=NodeType}" Value="Element">
                <Setter TargetName="text" Property="Text" Value="{Binding Path=Name}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=NodeType}" Value="Comment">
                <!--<Setter TargetName="text" Property="Visibility" Value="Collapsed"></Setter>-->
                <Setter TargetName="text" Property="Text" Value="Comments"></Setter>
            </DataTrigger>
        </HierarchicalDataTemplate.Triggers>
    </HierarchicalDataTemplate>


</ResourceDictionary>